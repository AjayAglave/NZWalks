// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20250723121620_Seed data for difficulties and regions")]
    partial class Seeddatafordifficultiesandregions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Dmain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("501dfbd8-4c64-4eaa-a961-94b5ee5751c0"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("8c91828d-5c9c-41b1-9a36-43ee0f7a3210"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("6abaea43-513d-414a-87ab-2d5879ba5d34"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Dmain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a88e888-44e8-414d-897b-a13c120a0bec"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "AucklandImageUrl"
                        },
                        new
                        {
                            Id = new Guid("8d1ae977-4cf6-4477-a43a-bf3f49c50b51"),
                            Code = "WLG",
                            Name = "Wellington",
                            RegionImageUrl = "WellingtonImageUrl"
                        },
                        new
                        {
                            Id = new Guid("d027a0d8-cfa9-4359-95b6-dba4c9be34d1"),
                            Code = "CHC",
                            Name = "Christchurch",
                            RegionImageUrl = "ChristchurchImageUrl"
                        },
                        new
                        {
                            Id = new Guid("7579d713-bf23-4af1-9198-e1924d4f9aea"),
                            Code = "HLZ",
                            Name = "Hamilton",
                            RegionImageUrl = "HamiltonImageUrl"
                        },
                        new
                        {
                            Id = new Guid("13c0cc3e-b9d6-4788-89a2-91a16d456c73"),
                            Code = "TRG",
                            Name = "Tauranga",
                            RegionImageUrl = "TaurangaImageUrl"
                        },
                        new
                        {
                            Id = new Guid("ba4082ec-4094-40b7-acdc-db15ea6607e9"),
                            Code = "DUD",
                            Name = "Dunedin",
                            RegionImageUrl = "DunedinImageUrl"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Dmain.Walks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Models.Dmain.Walks", b =>
                {
                    b.HasOne("NZWalks.API.Models.Dmain.Difficulty", "difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Dmain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");

                    b.Navigation("difficulty");
                });
#pragma warning restore 612, 618
        }
    }
}
